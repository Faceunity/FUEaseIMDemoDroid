apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'

android {
    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
    properties.load( inputStream )

    signingConfigs {
        debug {
            storeFile file(properties.getProperty('DEBUG_STORE_FILE_PATH', '/keystore/sdkdemo.jks'))
            storePassword properties.getProperty('DEBUG_STORE_PASSWORD', '123456')
            keyAlias = properties.getProperty('DEBUG_KEY_ALIAS', 'easemob')
            keyPassword properties.getProperty('DEBUG_KEY_PASSWORD', '123456')
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.hyphenate.easeim"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 71
        versionName "3.7.1"
        multiDexEnabled true
        //为了兼容5.0以下使用vector图标
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //指定room.schemaLocation生成的文件路径  处理Room 警告 Schema export Error
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

        manifestPlaceholders = [EASEMOB_APPKEY: properties.getProperty("EASEMOB_APPKEY", "easemob-demo#chatdemoui"),
                                VIVO_PUSH_APPKEY: properties.getProperty("VIVO_PUSH_APPKEY", "******"),
                                VIVO_PUSH_APPID: properties.getProperty("VIVO_PUSH_APPID", "******"),
                                BAIDU_LOCATION_APPKEY: properties.getProperty("BAIDU_LOCATION_APPKEY", "******")
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            //applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "min"
    productFlavors {
        dev {
            minSdkVersion 21
            dimension "min"
        }

        prod {
            minSdkVersion 19
            dimension "min"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

    //use legacy for android 6.0，SDK3.6.8后移除
    //useLibrary 'org.apache.http.legacy'
    //自3.6.0开始需要java8的支持
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    //ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // google bottom navigation bar
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.1.0'
    // resolve 64k limit
    implementation 'com.android.support:multidex:1.0.3'
    // hms push
    implementation 'com.huawei.hms:push:4.0.2.300'
    // meizu push
    implementation 'com.meizu.flyme.internet:push-internal:3.7.0@aar'//配置集成sdk
    //oppo push
    implementation (name:'oppo_push_v2.1.0',ext:'aar')
    // Google firebase cloud messaging
    implementation 'com.google.android.gms:play-services-base:11.4.0'
    implementation 'com.google.firebase:firebase-messaging:11.4.0'
    // fresh and load more
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    // easeui
    api project(path: ':easeui')
    implementation project(path: ':faceunity')
    // room
    implementation "androidx.room:room-runtime:2.2.5"
    annotationProcessor "androidx.room:room-compiler:2.2.5"
    // parse
    implementation 'com.parse:parse-android:1.13.1'
}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
    flatDir{
        dirs 'libs'
    }
}